{"version":3,"sources":["context/createDataContext.js","context/ChatContext.js","context/SocketContext.js","pages/Login.js","components/ChatBoxTray.js","components/ProfileImage.js","components/ChatHeader.js","components/ChatPanel.js","components/FriendDrawer.js","components/UsersDrawer.js","components/SearchBox.js","components/SettingsTray.js","components/SwitchDrawer.js","components/SideBar.js","pages/Chat.js","pages/App.js","index.js"],"names":["createDataContext","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","action","type","users","payload","user","chats","activeChat","setUser","socket","username","emit","isUser","addUser","chatUsers","onlineUsers","values","addMessage","chatid","msg","newChats","map","c","id","messages","push","sendMessage","chat","message","sender","name","setActiveChat","addPrivateChat","createGroupChat","createPrivateChat","reciever","createCommunityChat","io","createSocket","on","console","log","Login","useContext","ChatContext","SocketContext","useState","setUsername","error","setError","className","role","onSubmit","e","preventDefault","placeholder","onChange","target","ChatBoxTray","sendTyping","lastUpdateTime","typingInterval","setMessage","isTyping","setIsTyping","startCheckingTyping","setInterval","Date","now","stopCheckingTyping","useCallback","clearInterval","useEffect","autoComplete","onKeyPress","disabled","length","ProfileImage","image","ChatHeader","toUpperCase","ChatPanel","mes","FriendDrawer","lenght","onClick","get","last","format","time","UsersDrawer","differenceBy","u","SearchBox","onSendPrivateMessage","setReciever","SettingsTray","SwitchDrawer","CHATS","SideBar","activeDrawer","setActiveDrawer","Chat","init","setInit","msg_sent","once","off","App","disconnect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAuBeA,EArBW,SAACC,EAASC,EAASC,GAC3C,IAAMC,EAAUC,IAAMC,gBAiBtB,MAAO,CAAEF,UAASG,SAfD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,qBAAWR,EAASE,GADb,mBAC1BO,EAD0B,KACnBC,EADmB,KAG3BC,EAAe,GACrB,IAAK,IAAIC,KAAOX,EACdU,EAAaC,GAAOX,EAAQW,GAAKF,GAGnC,OACE,cAACP,EAAQG,SAAT,CAAkBO,MAAK,aAAIJ,SAAUE,GAArC,SACGJ,O,SCmE4BR,GA/EjB,SAACU,EAAOK,GAC1B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BAAKN,GAAZ,IAAmBO,MAAOF,EAAOG,UACnC,IAAK,WACH,OAAO,2BAAKR,GAAZ,IAAmBS,KAAMJ,EAAOG,UAClC,IAAK,iBACH,OAAO,2BAAKR,GAAZ,IAAmBU,MAAM,GAAD,mBAAMV,EAAMU,OAAZ,CAAmBL,EAAOG,YACpD,IAAK,kBACH,OAAO,2BAAKR,GAAZ,IAAmBW,WAAYN,EAAOG,UACxC,IAAK,eACH,OAAO,2BAAKR,GAAZ,IAAmBU,MAAOL,EAAOG,UACnC,IAAK,mBACH,OAAO,2BAAKR,GAAZ,IAAmBU,MAAM,GAAD,mBAAMV,EAAMU,OAAZ,CAAmBL,EAAOG,YACpD,QACE,OAAOR,KAkEX,CACEY,QAVY,SAACX,GAAD,OAAc,SAACY,EAAQC,GACrCD,EAAOE,KAAK,cAAeD,GAAU,YAAuB,IAApBE,EAAmB,EAAnBA,OAAQP,EAAW,EAAXA,KAC9C,GAAIO,EAAQ,OAAO,KACnBf,EAAS,CAAEK,KAAM,WAAYE,QAASC,SAQtCQ,QApBY,SAAChB,GAAD,OAAc,SAACY,EAAQJ,GACrCI,EAAOE,KAAK,iBAAkBN,KAoB5BS,UAjBc,SAACjB,GAAD,OAAc,SAACM,GAC/B,IAAMY,EAAcC,iBAAOb,GAC3BN,EAAS,CAAEK,KAAM,aAAcE,QAASW,MAgBtCE,WAxCe,SAACpB,GAAD,OAAc,SAACqB,EAAQZ,GACxC,OAAO,SAACa,GACN,IAAIC,EAAWd,EAAMe,KAAI,SAACC,GAIxB,OAHIA,EAAEC,KAAOL,GACXI,EAAEE,SAASC,KAAKN,GAEXG,KAETzB,EAAS,CAAEK,KAAM,eAAgBE,QAASgB,OAiC1CM,YAhDgB,SAAC7B,GAAD,OAAc,SAACY,EAAQJ,EAAMsB,EAAMC,GACrD,IAAMV,EAASS,EAAKJ,GACdM,EAASxB,EAAKyB,KAEpBrB,EAAOE,KAAK,eAAgB,CAAEkB,SAAQX,SAAQU,cA6C5CG,cArDkB,SAAClC,GAAD,OAAc,SAAC8B,GACnC9B,EAAS,CAAEK,KAAM,kBAAmBE,QAASuB,MAqD3CK,eA1DmB,SAACnC,GAAD,OAAc,SAAC8B,GACpC9B,EAAS,CAAEK,KAAM,mBAAoBE,QAASuB,MA0D5CM,gBAtEoB,SAACpC,GAAD,OAAc,cAuElCqC,kBArEsB,SAACrC,GAAD,OAAc,SACtCY,EACA0B,EACAN,EACAtB,GAEAE,EAAOE,KAAK,kBAAmB,CAAEwB,WAAUN,SAAQtB,iBAgEjD6B,oBAlCwB,SAACvC,GAAD,OAAc,SAACY,GACzCA,EAAOE,KAAK,kBAAkB,SAACgB,GAC7B9B,EAAS,CAAEK,KAAM,iBAAkBE,QAASuB,UAkC9C,CAAEtB,KAAM,KAAMF,MAAO,KAAMG,MAAO,GAAIC,WAAY,KAAMY,IAAK,OAdhD7B,E,EAAAA,QAASG,E,EAAAA,S,QC/ElBgB,E,MAAS4B,GAAG,K,EAkBmBnD,GAhBf,SAACU,EAAOK,GAC5B,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BAAKN,GAAZ,IAAmBa,OAAQR,EAAOG,UACpC,QACE,OAAOR,KAaX,CAAE0C,aATiB,SAACzC,GAAD,OAAc,WACjCY,EAAO8B,GAAG,WAAW,WACnBC,QAAQC,IAAI,gBAEd5C,EAAS,CAAEK,KAAM,gBAAiBE,QAASK,OAM3C,CAAEA,OAAQ,OAHGnB,E,EAAAA,QAASG,E,EAAAA,SC8CTiD,EA/DD,WAAO,IAAD,EAIdC,qBAAWC,GAFJvC,EAFO,EAEhBT,MAASS,KACTG,EAHgB,EAGhBA,QAGSC,EACPkC,qBAAWE,GADbjD,MAASa,OANO,EAScqC,mBAAS,IATvB,mBASXpC,EATW,KASDqC,EATC,OAUQD,mBAAS,IAVjB,mBAUXE,EAVW,KAUJC,EAVI,KA4BlB,OACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,mBACCF,EACC,qBAAKE,UAAU,qBAAqBC,KAAK,QAAzC,SACGH,IAED,KACJ,uBAAMI,SAxBG,SAACC,GACpBA,EAAEC,iBAEF9C,EAAQC,EAAQC,GAGduC,EADW,OAAT5C,EACO,oBAEA,KAgBD,UACE,sBAAK6C,UAAU,aAAf,UACE,6CACA,uBACEhD,KAAK,OACLgD,UAAU,eACVK,YAAY,wBACZzB,KAAK,OACL0B,SApCG,SAACH,GACpBN,EAAYM,EAAEI,OAAOzD,aAsCT,wBAAQE,KAAK,SAASgD,UAAU,4BAAhC,mCCoCDQ,EAvFK,SAAC,GAAyB,EAAvBC,WAAwB,IAYzCC,EACAC,EAb6BlC,EAAW,EAAXA,KAAW,EAIxCgB,qBAAWC,GAFJvC,EAFiC,EAE1CT,MAASS,KACTqB,EAH0C,EAG1CA,YAGSjB,EACPkC,qBAAWE,GADbjD,MAASa,OANiC,EASdqC,mBAAS,IATK,mBASrClB,EATqC,KAS5BkC,EAT4B,OAUZhB,oBAAS,GAVG,mBAUrCiB,EAVqC,KAU3BC,EAV2B,KAkCtCC,EAAsB,WAC1BzB,QAAQC,IAAI,UACZoB,EAAiBK,aAAY,WACvBC,KAAKC,MAAQR,EAAiB,MAChCI,GAAY,GACZK,OAED,MAGCA,EAAqBC,uBAAY,WACrC9B,QAAQC,IAAI,eACRoB,GACFU,cAAcV,KAGf,CAACA,IAQJ,OANAW,qBAAU,WACR,OAAO,WACLH,OAED,CAACA,IAGF,qBAAKnB,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,uBAAME,SA1CS,SAACC,GACpBA,EAAEC,iBACF5B,EAAYjB,EAAQJ,EAAMsB,EAAMC,GAChCkC,EAAW,KAuCuBZ,UAAU,gBAAxC,UACE,mBAAGA,UAAU,iBAAb,sCACA,uBACEhD,KAAK,OACLqD,YAAY,eACZvD,MAAO4B,EACP6C,aAAc,MACdC,WAAY,SAACrB,GA1CrBO,EAAiBO,KAAKC,MACjBL,IACHC,GAAY,GAEZC,MAyCMT,SAxDW,SAACH,GACpBS,EAAWT,EAAEI,OAAOzD,UAyDd,mBAAGkD,UAAU,iBAAb,iBACA,wBACEyB,SAAU/C,EAAQgD,OAAS,EAC3B1E,KAAK,SACLgD,UAAU,eAHZ,SAKE,mBAAGA,UAAU,iBAAb,4BCzEG2B,EARM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,qBAAK5B,UAAU,oCAAf,SACE,oBAAIA,UAAU,oBAAd,SAAmC4B,OCmB1BC,EArBI,SAAC,GAAc,IAAZpD,EAAW,EAAXA,KAGpB,OACE,qBAAKuB,UAAU,gBAAf,SACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,EAAD,CAAc4B,MAAOnD,EAAKG,KAAK,GAAGkD,gBAClC,sBAAK9B,UAAU,OAAf,UACE,6BAAKvB,EAAKG,OACV,4BARO,cAUT,uBAAMoB,UAAU,cAAhB,UACE,mBAAGA,UAAU,iBAAb,yBACA,mBAAGA,UAAU,iBAAb,sBACA,mBAAGA,UAAU,iBAAb,gC,iBCgBK+B,EA9BG,SAAC,GAAoB,IAAlBtD,EAAiB,EAAjBA,KAAMtB,EAAW,EAAXA,KACzB,OACE,cAAC,IAAD,CAAgB6C,UAAU,cAA1B,SACE,qBAAKA,UAAU,aAAf,SACGvB,EAAKH,SAASH,KAAI,SAAC6D,GAClB,OACE,qBAAKhC,UAAU,kBAAf,SACE,qBACEA,UAAS,iCACPgC,EAAIrD,SAAWxB,EAAKyB,KAAO,mBAAqB,YAFpD,SAKE,qBACEoB,UAAS,sBACPgC,EAAIrD,SAAWxB,EAAKyB,KAChB,cACA,iCAJR,SAOGoD,EAAItD,aAb2BsD,EAAI3D,Y,iBC6BvC4D,EA/BM,WAAO,IAAD,EAIrBxC,qBAAWC,GAFJtC,EAFc,EAEvBV,MAASU,MACTyB,EAHuB,EAGvBA,cAGF,OACE,mCACoB,IAAjBzB,EAAM8E,OACH9E,EAAMe,KAAI,SAACM,GACT,OACE,sBAAK0D,QAAS,kBAAMtD,EAAcJ,IAAlC,UACE,sBAAKuB,UAAU,uCAAf,UACE,cAAC,EAAD,CAAc4B,MAAOnD,EAAKG,KAAK,GAAGkD,gBAClC,sBAAK9B,UAAU,OAAf,UACE,6BAAKvB,EAAKG,OACV,4BAAIwD,cAAIC,eAAK5D,EAAKH,UAAW,UAAW,SAE1C,sBAAM0B,UAAU,aAAhB,SACE,cAAC,IAAD,CAAQsC,OAAO,SAAf,SAAyB7D,EAAK8D,YAGlC,yBAX4C9D,EAAKJ,OAevD,QCSKmE,EAnCK,WAAO,IAAD,EAIpB/C,qBAAWC,GAJS,IAEtBhD,MAASS,EAFa,EAEbA,KAAMF,EAFO,EAEPA,MAAOI,EAFA,EAEAA,WACtB2B,EAHsB,EAGtBA,kBAGSzB,EACPkC,qBAAWE,GADbjD,MAASa,OAGX,OACE,mCACoB,IAAjBN,EAAMiF,OACHO,uBAAaxF,EAAO,CAACE,GAAO,QAAQgB,KAAI,SAACuE,GACvC,OACE,sBAEEP,QAAS,kBACPnD,EAAkBzB,EAAQmF,EAAE9D,KAAMzB,EAAKyB,KAAMvB,IAHjD,UAME,sBAAK2C,UAAU,uCAAf,UACE,cAAC,EAAD,CAAc4B,MAAOc,EAAE9D,KAAK,GAAGkD,gBAC/B,qBAAK9B,UAAU,OAAf,SACE,6BAAK0C,EAAE9D,YAGX,yBAXK8D,EAAErE,OAeb,QCNKsE,EA7BG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAA2B,EACdhD,mBAAS,IADK,mBACvCX,EADuC,KAC7B4D,EAD6B,KAc9C,OACE,qBAAK7C,UAAU,aAAf,SACE,uBAAMA,UAAU,gBAAgBE,SAbf,SAACC,GACpBA,EAAEC,iBAEFwC,EAAqB3D,GACrB4D,EAAY,KASV,UACE,mBAAG7C,UAAU,iBAAb,oBACA,uBACEhD,KAAK,OACLF,MAAOmC,EACPoB,YAAY,SACZC,SAZa,SAACH,GACpB0C,EAAY1C,EAAEI,OAAOzD,gBCmBVgG,EA9BM,WACnB,OACE,qBAAK9C,UAAU,gBAAf,SACE,oBAAIA,UAAU,OAAd,sBCcS+C,MAjBf,YAAkD,IAA1BZ,EAAyB,EAAzBA,QAAS/E,EAAgB,EAAhBA,MAAOH,EAAS,EAATA,MACtC,OACE,qBAAI+C,UAAU,kDAAd,UACE,oBAAIA,UAAU,WAAd,SACE,qBAAKmC,QAAS,kBAAMA,EAAQ/E,IAAQ4C,UAAU,eAA9C,qBAIF,oBAAIA,UAAU,WAAd,SACE,qBAAKmC,QAAS,kBAAMA,EAAQlF,IAAQ+C,UAAU,WAA9C,yBCHFgD,EAAQ,QAkBCC,EAfC,WAAO,IAAD,EACoBrD,mBAASoD,GAD7B,mBACbE,EADa,KACCC,EADD,KAGpB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAchB,QAASgB,EAAiB/F,MAAO4F,EAAO/F,MAT9C,UAUR,qBAAK+C,UAAU,4BAAf,SACGkD,IAAiBF,EAAQ,cAAC,EAAD,IAAmB,cAAC,EAAD,UC0EtCI,EArFF,SAAC,GAAc,IAAZjG,EAAW,EAAXA,KAAW,EACDyC,oBAAS,GADR,mBAClByD,EADkB,KACZC,EADY,KAGd/F,EACPkC,qBAAWE,GADbjD,MAASa,OAHc,EAYrBkC,qBAAWC,GAZU,IAMvBhD,MAASO,EANc,EAMdA,MAAOG,EANO,EAMPA,MAAOC,EANA,EAMAA,WACvBU,EAPuB,EAOvBA,WACAJ,EARuB,EAQvBA,QACAC,EATuB,EASvBA,UACAkB,EAVuB,EAUvBA,eACAI,EAXuB,EAWvBA,oBA0CF,OAxCAoC,qBAAU,WACR,IAAIiC,EAqBJ,OApBKF,IACH1F,EAAQJ,EAAQJ,GAChB+B,EAAoB3B,GACpB+F,GAAQ,IAGVlG,EAAMe,KAAI,SAACM,GAGT,OAFA8E,EAAQ,uBAAmB9E,EAAKJ,IAChCd,EAAOiG,KAAKD,EAAUxF,EAAWU,EAAKJ,GAAIjB,KACnC,KAGTG,EAAOiG,KAAK,mBAAmB,SAAC/E,GAC9BK,EAAeL,MAGjBlB,EAAOiG,KAAK,kBAAkB,SAACvG,GAC7BW,EAAUX,MAGL,WACLM,EAAOkG,IAAIF,GACXhG,EAAOkG,IAAI,kBACXlG,EAAOkG,IAAI,sBAEZ,CACDtG,EACAF,EACAG,EACAiG,EACAzF,EACAD,EACAI,EACAmB,EACAJ,EACAvB,IAIA,qBAAKyC,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,0CAAf,SACE,cAAC,EAAD,MAEF,qBACEA,UAAS,mCACN3C,EAEG,KADA,oDAHR,SAOkB,OAAfA,EACC,gCACE,cAAC,EAAD,CAAYoB,KAAMpB,IAClB,cAAC,EAAD,CAAWoB,KAAMpB,EAAYF,KAAMA,IACnC,cAAC,EAAD,CAAasB,KAAMpB,OAGrB,8BACE,8DCrDDqG,EAxBH,WAAO,IAENvG,EACPsC,qBAAWC,GADbhD,MAASS,KAFK,EAOZsC,qBAAWE,GAFJpC,EALK,EAKdb,MAASa,OACT6B,EANc,EAMdA,aAeF,OAZAkC,qBAAU,WAIR,OAHe,OAAX/D,GACF6B,IAEK,WACL,GAAe,OAAX7B,EAEF,OADAA,EAAOoG,cACA,KAGV,CAACvE,EAAc7B,IAEX,8BAAe,OAATJ,EAAgB,cAAC,EAAD,IAAY,cAAC,EAAD,CAAMA,KAAMA,O,OClBvDyG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,U","file":"static/js/main.423b9aa7.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\n\nconst createDataContext = (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n\nexport default createDataContext;\n","import createDataContext from './createDataContext';\nimport { values } from 'lodash';\n\nconst chatReducer = (state, action) => {\n  switch (action.type) {\n    case 'chat_users':\n      return { ...state, users: action.payload };\n    case 'set_user':\n      return { ...state, user: action.payload };\n    case 'community_chat':\n      return { ...state, chats: [...state.chats, action.payload] };\n    case 'set_active_chat':\n      return { ...state, activeChat: action.payload };\n    case 'send_message':\n      return { ...state, chats: action.payload };\n    case 'add_private_chat':\n      return { ...state, chats: [...state.chats, action.payload] };\n    default:\n      return state;\n  }\n};\n\nconst createGroupChat = (dispatch) => () => {};\n\nconst createPrivateChat = (dispatch) => (\n  socket,\n  reciever,\n  sender,\n  activeChat\n) => {\n  socket.emit('PRIVATE_MESSAGE', { reciever, sender, activeChat });\n};\n\nconst addPrivateChat = (dispatch) => (chat) => {\n  dispatch({ type: 'add_private_chat', payload: chat });\n};\n\nconst setActiveChat = (dispatch) => (chat) => {\n  dispatch({ type: 'set_active_chat', payload: chat });\n};\n\nconst sendMessage = (dispatch) => (socket, user, chat, message) => {\n  const chatid = chat.id;\n  const sender = user.name;\n\n  socket.emit('MESSAGE_SENT', { sender, chatid, message });\n};\n\nconst addMessage = (dispatch) => (chatid, chats) => {\n  return (msg) => {\n    let newChats = chats.map((c) => {\n      if (c.id === chatid) {\n        c.messages.push(msg);\n      }\n      return c;\n    });\n    dispatch({ type: 'send_message', payload: newChats });\n  };\n};\n\nconst createCommunityChat = (dispatch) => (socket) => {\n  socket.emit('COMMUNITY_CHAT', (chat) => {\n    dispatch({ type: 'community_chat', payload: chat });\n  });\n};\n\nconst addUser = (dispatch) => (socket, user) => {\n  socket.emit('USER_CONNECTED', user);\n};\n\nconst chatUsers = (dispatch) => (users) => {\n  const onlineUsers = values(users);\n  dispatch({ type: 'chat_users', payload: onlineUsers });\n};\n\nconst setUser = (dispatch) => (socket, username) => {\n  socket.emit('VERIFY_USER', username, ({ isUser, user }) => {\n    if (isUser) return null;\n    dispatch({ type: 'set_user', payload: user });\n  });\n};\n\nexport const { Context, Provider } = createDataContext(\n  chatReducer,\n  {\n    setUser,\n    addUser,\n    chatUsers,\n    addMessage,\n    sendMessage,\n    setActiveChat,\n    addPrivateChat,\n    createGroupChat,\n    createPrivateChat,\n    createCommunityChat,\n  },\n  { user: null, users: null, chats: [], activeChat: null, msg: null }\n);\n","import createDataContext from './createDataContext';\nimport io from 'socket.io-client';\n\nconst socket = io('/');\n\nconst socketReducer = (state, action) => {\n  switch (action.type) {\n    case 'create_socket':\n      return { ...state, socket: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst createSocket = (dispatch) => () => {\n  socket.on('connect', () => {\n    console.log('Connected');\n  });\n  dispatch({ type: 'create_socket', payload: socket });\n};\n\nexport const { Context, Provider } = createDataContext(\n  socketReducer,\n  { createSocket },\n  { socket: null }\n);\n","import React, { useState, useContext } from 'react';\nimport { Context as ChatContext } from '../context/ChatContext';\nimport { Context as SocketContext } from '../context/SocketContext';\n\nconst Login = () => {\n  const {\n    state: { user },\n    setUser,\n  } = useContext(ChatContext);\n  const {\n    state: { socket },\n  } = useContext(SocketContext);\n\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setUser(socket, username);\n\n    if (user === null) {\n      setError('Username taken!!!');\n    } else {\n      setError('');\n    }\n  };\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-md-6 m-auto'>\n          <div className='card'>\n            <div className='card-body'>\n              <h2 className='text-center mb-3'>Login</h2>\n              {error ? (\n                <div className='alert alert-danger' role='alert'>\n                  {error}\n                </div>\n              ) : null}\n              <form onSubmit={handleSubmit}>\n                <div className='form-group'>\n                  <label>Username</label>\n                  <input\n                    type='text'\n                    className='form-control'\n                    placeholder='Please Enter Username'\n                    name='name'\n                    onChange={handleChange}\n                  />\n                </div>\n                <button type='submit' className='btn btn-primary btn-block'>\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { Context as ChatContext } from '../context/ChatContext';\nimport { Context as SocketContext } from '../context/SocketContext';\n\nconst ChatBoxTray = ({ sendTyping, chat }) => {\n  const {\n    state: { user },\n    sendMessage,\n  } = useContext(ChatContext);\n  const {\n    state: { socket },\n  } = useContext(SocketContext);\n\n  const [message, setMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n\n  let lastUpdateTime;\n  let typingInterval;\n\n  const handleChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(socket, user, chat, message);\n    setMessage('');\n  };\n\n  const sendUserTyping = () => {\n    lastUpdateTime = Date.now();\n    if (!isTyping) {\n      setIsTyping(true);\n      // sendTyping(true);\n      startCheckingTyping();\n    }\n  };\n\n  const startCheckingTyping = () => {\n    console.log('Typing');\n    typingInterval = setInterval(() => {\n      if (Date.now() - lastUpdateTime > 300) {\n        setIsTyping(false);\n        stopCheckingTyping();\n      }\n    }, 300);\n  };\n\n  const stopCheckingTyping = useCallback(() => {\n    console.log('Stop Typing');\n    if (typingInterval) {\n      clearInterval(typingInterval);\n      // sendTyping(false);\n    }\n  }, [typingInterval]);\n\n  useEffect(() => {\n    return () => {\n      stopCheckingTyping();\n    };\n  }, [stopCheckingTyping]);\n\n  return (\n    <div className='row'>\n      <div className='col-12'>\n        <form onSubmit={handleSubmit} className='chat-box-tray'>\n          <i className='material-icons'>sentiment_very_satisfied</i>\n          <input\n            type='text'\n            placeholder='Type Message'\n            value={message}\n            autoComplete={'off'}\n            onKeyPress={(e) => {\n              sendUserTyping();\n            }}\n            onChange={handleChange}\n          />\n          <i className='material-icons'>mic</i>\n          <button\n            disabled={message.length < 1}\n            type='submit'\n            className='btn p-0 ml-4'\n          >\n            <i className='material-icons'>send</i>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBoxTray;\n","import React from 'react';\n\nconst ProfileImage = ({ image }) => {\n  return (\n    <div className='profile-image bg-secondary d-flex'>\n      <h4 className='text-white m-auto'>{image}</h4>\n    </div>\n  );\n};\n\nexport default ProfileImage;\n","import React from 'react';\nimport ProfileImage from './ProfileImage';\n\nconst ChatHeader = ({ chat }) => {\n  const status = 'Online';\n\n  return (\n    <div className='settings-tray'>\n      <div className='friend-drawer friend-drawer--grey p-0'>\n        <ProfileImage image={chat.name[0].toUpperCase()} />\n        <div className='text'>\n          <h6>{chat.name}</h6>\n          <p>{status}</p>\n        </div>\n        <span className='float-right'>\n          <i className='material-icons'>attach_file</i>\n          <i className='material-icons'>videocam</i>\n          <i className='material-icons'>more_vert</i>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatHeader;\n","import React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst ChatPanel = ({ chat, user }) => {\n  return (\n    <ScrollToBottom className='scroll-view'>\n      <div className='chat-panel'>\n        {chat.messages.map((mes) => {\n          return (\n            <div className='row no-gutterse' key={mes.id}>\n              <div\n                className={`d-flex flex-wrap w-100 ${\n                  mes.sender === user.name ? 'flex-row-reverse' : 'flex-row'\n                }`}\n              >\n                <div\n                  className={`chat-bubble ${\n                    mes.sender === user.name\n                      ? 'chat-bubble'\n                      : 'chat-bubble chat-bubble--blue'\n                  }`}\n                >\n                  {mes.message}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </ScrollToBottom>\n  );\n};\n\nexport default ChatPanel;\n","import React, { useContext } from 'react';\nimport Moment from 'react-moment';\nimport { last, get } from 'lodash';\n\nimport { Context as ChatContext } from '../context/ChatContext';\nimport ProfileImage from './ProfileImage';\n\nconst FriendDrawer = () => {\n  const {\n    state: { chats },\n    setActiveChat,\n  } = useContext(ChatContext);\n\n  return (\n    <>\n      {chats.lenght !== 0\n        ? chats.map((chat) => {\n            return (\n              <div onClick={() => setActiveChat(chat)} key={chat.id}>\n                <div className='friend-drawer friend-drawer--onhover'>\n                  <ProfileImage image={chat.name[0].toUpperCase()} />\n                  <div className='text'>\n                    <h6>{chat.name}</h6>\n                    <p>{get(last(chat.messages), 'message', '')}</p>\n                  </div>\n                  <span className='time small'>\n                    <Moment format='h:mm A'>{chat.time}</Moment>\n                  </span>\n                </div>\n                <hr />\n              </div>\n            );\n          })\n        : null}\n    </>\n  );\n};\n\nexport default FriendDrawer;\n","import React, { useContext } from 'react';\nimport { differenceBy } from 'lodash';\n\nimport { Context as ChatContext } from '../context/ChatContext';\nimport { Context as SocketContext } from '../context/SocketContext';\nimport ProfileImage from './ProfileImage';\n\nconst UsersDrawer = () => {\n  const {\n    state: { user, users, activeChat },\n    createPrivateChat,\n  } = useContext(ChatContext);\n  const {\n    state: { socket },\n  } = useContext(SocketContext);\n\n  return (\n    <>\n      {users.lenght !== 0\n        ? differenceBy(users, [user], 'name').map((u) => {\n            return (\n              <div\n                key={u.id}\n                onClick={() =>\n                  createPrivateChat(socket, u.name, user.name, activeChat)\n                }\n              >\n                <div className='friend-drawer friend-drawer--onhover'>\n                  <ProfileImage image={u.name[0].toUpperCase()} />\n                  <div className='text'>\n                    <h6>{u.name}</h6>\n                  </div>\n                </div>\n                <hr />\n              </div>\n            );\n          })\n        : null}\n    </>\n  );\n};\n\nexport default UsersDrawer;\n","import React, { useState } from 'react';\n\nconst SearchBox = ({ onSendPrivateMessage }) => {\n  const [reciever, setReciever] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSendPrivateMessage(reciever);\n    setReciever('');\n  };\n\n  const handleChange = (e) => {\n    setReciever(e.target.value);\n  };\n\n  return (\n    <div className='search-box'>\n      <form className='input-wrapper' onSubmit={handleSubmit}>\n        <i className='material-icons'>search</i>\n        <input\n          type='text'\n          value={reciever}\n          placeholder='Search'\n          onChange={handleChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst SettingsTray = () => {\n  return (\n    <div className='settings-tray'>\n      <h2 className='ml-0'>Chats</h2>\n      {/* <img className='profile-image' src={img} alt='' /> */}\n      {/* <div className='profile-image profile-image--text bg-secondary justify-content-center'>\n        <div className='col-1 mt-2'>\n          <h4 className='text-white'>{user.name[0].toUpperCase()}</h4>\n        </div> */}\n      {/* <span className='settings-tray--right float-right'>\n        <i className='material-icons'>cached</i>\n        <i className='material-icons'>message</i>\n        <i\n          className='material-icons'\n          data-toggle='dropdown'\n          aria-haspopup='true'\n          aria-expanded='false'\n        >\n          more_vert\n        </i>\n        <div className='dropdown-menu'>\n          <div onClick={() => logout} className='dropdown-item'>\n            Logout\n          </div>\n        </div>\n      </span> */}\n    </div>\n  );\n};\n\nexport default SettingsTray;\n","import React from 'react';\n\nfunction SwitchDrawer({ onClick, chats, users }) {\n  return (\n    <ul className='nav nav-pills nav-fill border-bottom border-top'>\n      <li className='nav-item'>\n        <div onClick={() => onClick(chats)} className='nav nav-link'>\n          Chats\n        </div>\n      </li>\n      <li className='nav-item'>\n        <div onClick={() => onClick(users)} className='nav-link'>\n          Users\n        </div>\n      </li>\n    </ul>\n  );\n}\n\nexport default SwitchDrawer;\n","import React, { useState } from 'react';\n\nimport FriendDrawer from '../components/FriendDrawer';\nimport UsersDrawer from '../components/UsersDrawer';\nimport SearchBox from '../components/SearchBox';\nimport SettingsTray from '../components/SettingsTray';\nimport SwitchDrawer from '../components/SwitchDrawer';\n\nconst CHATS = 'CHATS';\nconst USERS = 'USERS';\n\nconst SideBar = () => {\n  const [activeDrawer, setActiveDrawer] = useState(CHATS);\n\n  return (\n    <>\n      <SettingsTray />\n      <SearchBox />\n      <SwitchDrawer onClick={setActiveDrawer} chats={CHATS} users={USERS} />\n      <div className='overflow-auto w-100 h-100'>\n        {activeDrawer === CHATS ? <FriendDrawer /> : <UsersDrawer />}\n      </div>\n    </>\n  );\n};\n\nexport default SideBar;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Context as SocketContext } from '../context/SocketContext';\nimport { Context as ChatContext } from '../context/ChatContext';\n\nimport ChatBoxTray from '../components/ChatBoxTray';\nimport ChatHeader from '../components/ChatHeader';\nimport ChatPanel from '../components/ChatPanel';\nimport SideBar from '../components/SideBar';\n\nconst Chat = ({ user }) => {\n  const [init, setInit] = useState(false);\n  const {\n    state: { socket },\n  } = useContext(SocketContext);\n  const {\n    state: { users, chats, activeChat },\n    addMessage,\n    addUser,\n    chatUsers,\n    addPrivateChat,\n    createCommunityChat,\n  } = useContext(ChatContext);\n  useEffect(() => {\n    let msg_sent;\n    if (!init) {\n      addUser(socket, user);\n      createCommunityChat(socket);\n      setInit(true);\n    }\n\n    chats.map((chat) => {\n      msg_sent = `MESSAGE_SENT-${chat.id}`;\n      socket.once(msg_sent, addMessage(chat.id, chats));\n      return true;\n    });\n\n    socket.once('PRIVATE_MESSAGE', (chat) => {\n      addPrivateChat(chat);\n    });\n\n    socket.once('USER_CONNECTED', (users) => {\n      chatUsers(users);\n    });\n\n    return () => {\n      socket.off(msg_sent);\n      socket.off('USER_CONNECTED');\n      socket.off('PRIVATE_MESSAGE');\n    };\n  }, [\n    user,\n    users,\n    chats,\n    init,\n    chatUsers,\n    addUser,\n    addMessage,\n    createCommunityChat,\n    addPrivateChat,\n    socket,\n  ]);\n\n  return (\n    <div className='container'>\n      <div className='card'>\n        <div className='row no-gutters'>\n          <div className='col-md-4 border-right col-xs-12 sidebar'>\n            <SideBar />\n          </div>\n          <div\n            className={`col-md-8 col-xs-12 panel ${\n              !activeChat\n                ? 'd-flex justify-content-center align-items-center'\n                : null\n            }`}\n          >\n            {activeChat !== null ? (\n              <div>\n                <ChatHeader chat={activeChat} />\n                <ChatPanel chat={activeChat} user={user} />\n                <ChatBoxTray chat={activeChat} />\n              </div>\n            ) : (\n              <div>\n                <h3>Choose a chat!!!</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useContext, useEffect } from 'react';\n\nimport { Context as ChatContext } from '../context/ChatContext';\nimport { Context as SocketContext } from '../context/SocketContext';\nimport Login from './Login';\nimport Chat from './Chat';\n\nconst App = () => {\n  const {\n    state: { user },\n  } = useContext(ChatContext);\n  const {\n    state: { socket },\n    createSocket,\n  } = useContext(SocketContext);\n\n  useEffect(() => {\n    if (socket === null) {\n      createSocket();\n    }\n    return () => {\n      if (socket !== null) {\n        socket.disconnect();\n        return true;\n      }\n    };\n  }, [createSocket, socket]);\n\n  return <div>{user === null ? <Login /> : <Chat user={user} />}</div>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\n\nimport { Provider as ChatProvider } from './context/ChatContext';\nimport { Provider as SocketProvider } from './context/SocketContext';\n\nimport './styles/App.scss';\n// import 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatProvider>\n      <SocketProvider>\n        <App />\n      </SocketProvider>\n    </ChatProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}